import json

# Contacts will be stored in this dictionary
contacts = {}

def load_contacts():
    """Load contacts from a JSON file if it exists."""
    try:
        with open("contacts.json", "r") as file:
            global contacts
            contacts = json.load(file)
        print("Contacts loaded successfully.")
    except FileNotFoundError:
        print("No saved contacts found. Starting fresh.")

def save_contacts():
    """Save contacts to a JSON file."""
    with open("contacts.json", "w") as file:
        json.dump(contacts, file, indent=4)
    print("Contacts saved successfully.")

def add_contact():
    print("\n--- Add New Contact ---")
    name = input("Enter contact name: ").strip()
    if name in contacts:
        print("A contact with this name already exists. Please use a different name.")
        return
    
    phone = input("Enter phone number: ").strip()
    if any(contact['phone'] == phone for contact in contacts.values()):
        print("This phone number is already in use. Please enter a unique phone number.")
        return
    
    email = input("Enter email: ").strip()
    address = input("Enter address: ").strip()

    contacts[name] = {
        "phone": phone,
        "email": email,
        "address": address
    }
    print(f"Contact '{name}' added successfully!")
    save_contacts()

def view_contacts():
    print("\n--- Contact List ---")
    if not contacts:
        print("No contacts found.")
    else:
        for name, info in contacts.items():
            print(f"Name: {name} | Phone: {info['phone']}")

def search_contact():
    print("\n--- Search Contact ---")
    search_term = input("Enter name or phone number to search: ").strip()
    results = {name: info for name, info in contacts.items() if search_term.lower() in name.lower() or search_term == info["phone"]}

    if results:
        print(f"\nFound {len(results)} contact(s):")
        for name, info in results.items():
            print(f"\nName: {name}\nPhone: {info['phone']}\nEmail: {info['email']}\nAddress: {info['address']}")
    else:
        print("No contact found with that name or phone number.")

def update_contact():
    print("\n--- Update Contact ---")
    name = input("Enter the name of the contact to update: ").strip()
    if name in contacts:
        print(f"Updating Contact '{name}'")
        new_phone = input(f"Enter new phone number (current: {contacts[name]['phone']}): ").strip()
        if new_phone and any(contact['phone'] == new_phone for contact in contacts.values() if contact != contacts[name]):
            print("This phone number is already in use. Please enter a unique phone number.")
            return
        
        new_email = input(f"Enter new email (current: {contacts[name]['email']}): ").strip()
        new_address = input(f"Enter new address (current: {contacts[name]['address']}): ").strip()
        
        # Update contact details
        contacts[name]['phone'] = new_phone if new_phone else contacts[name]['phone']
        contacts[name]['email'] = new_email if new_email else contacts[name]['email']
        contacts[name]['address'] = new_address if new_address else contacts[name]['address']
        
        print(f"Contact '{name}' updated successfully!")
        save_contacts()
    else:
        print("No contact found with that name.")

def delete_contact():
    print("\n--- Delete Contact ---")
    name = input("Enter the name of the contact to delete: ").strip()
    if name in contacts:
        del contacts[name]
        print(f"Contact '{name}' deleted successfully.")
        save_contacts()
    else:
        print("No contact found with that name.")

def display_menu():
    print("\n--- Contact Manager ---")
    print("1. Add Contact")
    print("2. View Contacts")
    print("3. Search Contact")
    print("4. Update Contact")
    print("5. Delete Contact")
    print("6. Exit")

def main():
    load_contacts()
    while True:
        display_menu()
        choice = input("Choose an option (1-6): ").strip()
        
        if choice == "1":
            add_contact()
        elif choice == "2":
            view_contacts()
        elif choice == "3":
            search_contact()
        elif choice == "4":
            update_contact()
        elif choice == "5":
            delete_contact()
        elif choice == "6":
            print("Exiting the Contact Manager. Goodbye!")
            break
        else:
            print("Invalid choice. Please select a valid option.")

# Run the Contact Manager Application
main
